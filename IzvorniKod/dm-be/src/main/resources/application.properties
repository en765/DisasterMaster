spring.application.name=dm-be
spring.datasource.url=jdbc:postgresql://ep-dark-mode-a29tde22.eu-central-1.aws.neon.tech/disastermaster-db?user=disastermaster-db_owner&password=q1kmEV8WzLeQ&sslmode=require

spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Server settings
server.port=8080

# Basic Form-based Authentication (optional if you're using in-memory authentication)
spring.security.user.name=user
spring.security.user.password=password
spring.security.user.roles=USER

# OAuth2 Configuration for Google Login
spring.security.oauth2.client.registration.google.client-id=69989007687-a952936cnqckikreccsoj1h51ht23vis.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile, email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs
